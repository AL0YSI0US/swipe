//+build !swipe

// Code generated by Swipe v1.20.1. DO NOT EDIT.

//go:generate swipe
package rest

import (
	"github.com/go-kit/kit/endpoint"
	"github.com/l-vitaly/go-kit/transport/fasthttp"
	"github.com/swipe-io/swipe/fixtures/service"
	fasthttp2 "github.com/valyala/fasthttp"
)

type httpError struct {
	code int
}

func (e httpError) Error() string {
	return fasthttp2.StatusMessage(e.code)
}
func (e httpError) StatusCode() int {
	return e.code
}
func ErrorDecode(code int) (_ error) {
	switch code {
	default:
		return httpError{code: code}
	case 403:
		return &service.ErrUnauthorized{}
	}
}

func middlewareChain(middlewares []endpoint.Middleware) endpoint.Middleware {
	return func(next endpoint.Endpoint) endpoint.Endpoint {
		if len(middlewares) == 0 {
			return next
		}
		outer := middlewares[0]
		others := middlewares[1:]
		for i := len(others) - 1; i >= 0; i-- {
			next = others[i](next)
		}
		return outer(next)
	}
}

type ServiceInterfaceServerOption func(*serverServiceInterfaceOpts)
type serverServiceInterfaceOpts struct {
	genericServerOption          []fasthttp.ServerOption
	genericEndpointMiddleware    []endpoint.Middleware
	getServerOption              []fasthttp.ServerOption
	getEndpointMiddleware        []endpoint.Middleware
	getAllServerOption           []fasthttp.ServerOption
	getAllEndpointMiddleware     []endpoint.Middleware
	testMethodServerOption       []fasthttp.ServerOption
	testMethodEndpointMiddleware []endpoint.Middleware
	createServerOption           []fasthttp.ServerOption
	createEndpointMiddleware     []endpoint.Middleware
	deleteServerOption           []fasthttp.ServerOption
	deleteEndpointMiddleware     []endpoint.Middleware
}

func ServiceInterfaceGenericServerOptions(v ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(o *serverServiceInterfaceOpts) { o.genericServerOption = v }
}

func ServiceInterfaceGenericServerEndpointMiddlewares(v ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(o *serverServiceInterfaceOpts) { o.genericEndpointMiddleware = v }
}

func ServiceInterfaceCreateServerOptions(opt ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.createServerOption = opt }
}

func ServiceInterfaceCreateServerEndpointMiddlewares(opt ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.createEndpointMiddleware = opt }
}

func ServiceInterfaceDeleteServerOptions(opt ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.deleteServerOption = opt }
}

func ServiceInterfaceDeleteServerEndpointMiddlewares(opt ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.deleteEndpointMiddleware = opt }
}

func ServiceInterfaceGetServerOptions(opt ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.getServerOption = opt }
}

func ServiceInterfaceGetServerEndpointMiddlewares(opt ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.getEndpointMiddleware = opt }
}

func ServiceInterfaceGetAllServerOptions(opt ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.getAllServerOption = opt }
}

func ServiceInterfaceGetAllServerEndpointMiddlewares(opt ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.getAllEndpointMiddleware = opt }
}

func ServiceInterfaceTestMethodServerOptions(opt ...fasthttp.ServerOption) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.testMethodServerOption = opt }
}

func ServiceInterfaceTestMethodServerEndpointMiddlewares(opt ...endpoint.Middleware) (_ ServiceInterfaceServerOption) {
	return func(c *serverServiceInterfaceOpts) { c.testMethodEndpointMiddleware = opt }
}
